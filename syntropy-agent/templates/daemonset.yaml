apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
  labels:
    {{- include "syntropy-agent.labels" . | nindent 4 }}
  name:  {{ include "syntropy-agent.fullname" . }}
spec:
  selector:
    matchLabels:
      {{- include "syntropy-agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "syntropy-agent.selectorLabels" . | nindent 8 }}
    spec:
      # nodeSelector:
      #   controlplane: "true"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
      serviceAccountName: {{ include "syntropy-agent.serviceAccountName" . }}
      containers:
      - env:
        - name: SYNTROPY_AGENT_TOKEN
          value: {{ .Values.syntropy.token }}
        - name: SYNTROPY_ALLOWED_IPS
          value: {{ .Values.syntropy.allowed_ips }}
        - name: SYNTROPY_IP_FROM
          value: {{ .Values.syntropy.ip_from }} 
        - name: SYNTROPY_LOG_LEVEL
          value: "DEBUG"
        - name: "SYNTROPY_NETWORK_API"
          value: "kubernetes"
        - name: "SYNTROPY_NAMESPACE"
          value: {{ .Values.syntropy.namespaces }}
        - name: "SYNTROPY_AGENT_NAME"
          value: {{ .Values.syntropy.name }}
        - name: "SYNTROPY_NETWORK"
          value: "{{ .Values.syntropy.network }}"
        - name: "SYNTROPY_TAGS"
          value: {{ .Values.syntropy.tags | default "" | quote }}
        - name: SYNTROPY_API_SERVER
          value: {{ .Values.syntropy.apiServer | default "" | quote }}
        - name: SYNTROPY_API_TOKEN
          value: {{ .Values.syntropy.apiToken | default "" | quote }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Chart.Name }}
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      hostNetwork: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 100
    type: RollingUpdate

